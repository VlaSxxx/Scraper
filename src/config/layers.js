/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Å–ª–æ–µ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É —Å–ª–æ—è–º–∏
 */

const { repositoryFactory } = require('../repositories');
const { serviceFactory } = require('../services');
const { controllerFactory } = require('../controllers');
const { dtoFactory } = require('../dto');

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–ª–æ–µ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
class LayersConfig {
  constructor() {
    this.repositories = repositoryFactory;
    this.services = serviceFactory;
    this.controllers = controllerFactory;
    this.dto = dtoFactory;
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ª–æ–µ–≤
    this.settings = {
      repositories: {
        caching: {
          enabled: process.env.REPOSITORY_CACHE_ENABLED === 'true',
          ttl: parseInt(process.env.REPOSITORY_CACHE_TTL) || 300 // 5 –º–∏–Ω—É—Ç
        },
        logging: {
          enabled: process.env.REPOSITORY_LOGGING_ENABLED !== 'false',
          level: process.env.REPOSITORY_LOG_LEVEL || 'info'
        },
        retries: {
          enabled: process.env.REPOSITORY_RETRIES_ENABLED === 'true',
          attempts: parseInt(process.env.REPOSITORY_RETRY_ATTEMPTS) || 3,
          delay: parseInt(process.env.REPOSITORY_RETRY_DELAY) || 1000
        }
      },
      
      services: {
        validation: {
          strict: process.env.SERVICE_STRICT_VALIDATION === 'true',
          skipWarnings: process.env.SERVICE_SKIP_WARNINGS === 'true'
        },
        caching: {
          enabled: process.env.SERVICE_CACHE_ENABLED === 'true',
          ttl: parseInt(process.env.SERVICE_CACHE_TTL) || 600 // 10 –º–∏–Ω—É—Ç
        },
        analytics: {
          enabled: process.env.ANALYTICS_ENABLED !== 'false',
          batchSize: parseInt(process.env.ANALYTICS_BATCH_SIZE) || 1000
        }
      },
      
      controllers: {
        pagination: {
          defaultLimit: parseInt(process.env.DEFAULT_PAGE_LIMIT) || 20,
          maxLimit: parseInt(process.env.MAX_PAGE_LIMIT) || 100
        },
        rateLimit: {
          enabled: process.env.RATE_LIMIT_ENABLED === 'true',
          windowMs: parseInt(process.env.RATE_LIMIT_WINDOW) || 900000, // 15 –º–∏–Ω—É—Ç
          maxRequests: parseInt(process.env.RATE_LIMIT_MAX) || 100
        },
        cors: {
          enabled: process.env.CORS_ENABLED !== 'false',
          origins: process.env.CORS_ORIGINS ? process.env.CORS_ORIGINS.split(',') : ['*']
        }
      },
      
      dto: {
        formatting: {
          dates: process.env.DATE_FORMAT || 'iso',
          numbers: process.env.NUMBER_FORMAT || 'standard',
          locale: process.env.LOCALE || 'en-US'
        },
        validation: {
          strict: process.env.DTO_STRICT_VALIDATION === 'true',
          coerce: process.env.DTO_COERCE_TYPES === 'true'
        }
      }
    };
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Å–ª–æ–µ–≤
   * @returns {Promise<void>}
   */
  async initialize() {
    console.log('üöÄ Initializing application layers...');
    
    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
      await this.initializeRepositories();
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
      await this.initializeServices();
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤
      await this.initializeControllers();
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DTO
      await this.initializeDto();
      
      console.log('‚úÖ All layers initialized successfully');
    } catch (error) {
      console.error('‚ùå Failed to initialize layers:', error);
      throw error;
    }
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª–æ—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
   * @returns {Promise<void>}
   */
  async initializeRepositories() {
    console.log('üìä Initializing repositories...');
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ
    if (this.settings.repositories.caching.enabled) {
      console.log('üóÑÔ∏è Repository caching enabled');
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É Redis –∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ –∫–µ—à–∞
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    if (this.settings.repositories.logging.enabled) {
      console.log('üìù Repository logging enabled');
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ë–î
    }
    
    console.log('‚úÖ Repositories initialized');
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª–æ—è —Å–µ—Ä–≤–∏—Å–æ–≤
   * @returns {Promise<void>}
   */
  async initializeServices() {
    console.log('‚öôÔ∏è Initializing services...');
    
    // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    const services = this.services.getAllServices();
    
    console.log('üéØ Available services:', Object.keys(services));
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞
    if (this.settings.services.analytics.enabled) {
      console.log('üìà Analytics services enabled');
    }
    
    console.log('‚úÖ Services initialized');
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª–æ—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤
   * @returns {Promise<void>}
   */
  async initializeControllers() {
    console.log('üéÆ Initializing controllers...');
    
    // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤
    const controllers = this.controllers.getAllControllers();
    
    console.log('üéØ Available controllers:', Object.keys(controllers));
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ
    if (this.settings.controllers.cors.enabled) {
      console.log('üåê CORS enabled for origins:', this.settings.controllers.cors.origins);
    }
    
    console.log('‚úÖ Controllers initialized');
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DTO —Å–ª–æ—è
   * @returns {Promise<void>}
   */
  async initializeDto() {
    console.log('üìã Initializing DTOs...');
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log('üåç Locale settings:', {
      dates: this.settings.dto.formatting.dates,
      numbers: this.settings.dto.formatting.numbers,
      locale: this.settings.dto.formatting.locale
    });
    
    console.log('‚úÖ DTOs initialized');
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–ª–æ—è
   * @param {String} layer - –ù–∞–∑–≤–∞–Ω–∏–µ —Å–ª–æ—è
   * @returns {Object} –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–ª–æ—è
   */
  getLayerConfig(layer) {
    return this.settings[layer] || {};
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–ª–æ—è
   * @param {String} layer - –ù–∞–∑–≤–∞–Ω–∏–µ —Å–ª–æ—è
   * @param {Object} config - –ù–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
   */
  updateLayerConfig(layer, config) {
    if (this.settings[layer]) {
      this.settings[layer] = { ...this.settings[layer], ...config };
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö –º–µ–∂–¥—É —Å–ª–æ—è–º–∏
   * @returns {Object} –ö–∞—Ä—Ç–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
   */
  getDependencyMap() {
    return {
      controllers: ['services', 'dto'],
      services: ['repositories', 'dto'],
      repositories: ['models'],
      dto: ['utils'],
      models: ['mongoose']
    };
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
   * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  validateArchitecture() {
    const issues = [];
    const warnings = [];
    
    try {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
      const casinoRepo = this.repositories.getCasinoScoreRepository();
      const taskRepo = this.repositories.getTaskExecutionRepository();
      
      if (!casinoRepo || !taskRepo) {
        issues.push('Some repositories are not available');
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
      const services = this.services.getAllServices();
      if (!services.casino || !services.tasks) {
        issues.push('Some services are not available');
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤
      const controllers = this.controllers.getAllControllers();
      if (!controllers.casino || !controllers.task) {
        issues.push('Some controllers are not available');
      }
      
      // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
      if (!this.settings.repositories.caching.enabled) {
        warnings.push('Repository caching is disabled - consider enabling for better performance');
      }
      
      if (!this.settings.controllers.rateLimit.enabled) {
        warnings.push('Rate limiting is disabled - consider enabling for production');
      }
      
    } catch (error) {
      issues.push(`Architecture validation failed: ${error.message}`);
    }
    
    return {
      isValid: issues.length === 0,
      issues,
      warnings
    };
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–ª–æ–µ–≤
   * @returns {Object} –ú–µ—Ç—Ä–∏–∫–∏
   */
  getLayerMetrics() {
    return {
      repositories: {
        casino: this.repositories.getCasinoScoreRepository() ? 'active' : 'inactive',
        task: this.repositories.getTaskExecutionRepository() ? 'active' : 'inactive'
      },
      services: {
        casino: Object.keys(this.services.getAllServices().casino).length,
        tasks: Object.keys(this.services.getAllServices().tasks).length
      },
      controllers: {
        count: Object.keys(this.controllers.getAllControllers()).length
      },
      dto: {
        factory: this.dto ? 'active' : 'inactive'
      }
    };
  }

  /**
   * –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
   * @returns {Object} –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
   */
  exportConfig() {
    return {
      layers: {
        repositories: this.repositories,
        services: this.services,
        controllers: this.controllers,
        dto: this.dto
      },
      settings: this.settings,
      dependencies: this.getDependencyMap(),
      metrics: this.getLayerMetrics()
    };
  }
}

// –°–æ–∑–¥–∞–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
const layersConfig = new LayersConfig();

module.exports = {
  LayersConfig,
  layersConfig
};
