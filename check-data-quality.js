const { connectDB } = require('./src/config/database');
const CasinoScore = require('./src/models/CasinoScore');
const ScraperFactory = require('./src/services/scraper-factory');

async function checkDataQuality() {
  try {
    console.log('üîç –ü–†–û–í–ï–†–ö–ê –ö–ê–ß–ï–°–¢–í–ê –î–ê–ù–ù–´–• –ò–ó CASINO SCORES');
    console.log('=' * 60);
    
    await connectDB();
    
    // 1. –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ
    console.log('üìä –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n');
    
    const latestRecord = await CasinoScore.findOne()
      .sort({ createdAt: -1 })
      .lean();
    
    if (!latestRecord) {
      console.log('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–∞—Ä—Å–∏–Ω–≥ —Å–Ω–∞—á–∞–ª–∞!');
      return;
    }
    
    console.log('üîç –ü–û–°–õ–ï–î–ù–Ø–Ø –ó–ê–ü–ò–°–¨ –í –ë–ê–ó–ï:');
    console.log('-' * 40);
    console.log(`üìã –ù–∞–∑–≤–∞–Ω–∏–µ: ${latestRecord.name}`);
    console.log(`üåê URL: ${latestRecord.url}`);
    console.log(`üìä –†–µ–π—Ç–∏–Ω–≥: ${latestRecord.score}/10`);
    console.log(`‚≠ê –û—Ü–µ–Ω–∫–∞: ${latestRecord.rating || 'N/A'}`);
    console.log(`üéØ –¢–∏–ø: ${latestRecord.type}`);
    console.log(`üè¢ –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${latestRecord.provider}`);
    console.log(`üïê –°–æ–∑–¥–∞–Ω–æ: ${new Date(latestRecord.createdAt).toLocaleString()}`);
    
    if (latestRecord.description) {
      console.log(`üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${latestRecord.description.substring(0, 200)}...`);
    }
    
    if (latestRecord.stats) {
      console.log(`üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
      Object.entries(latestRecord.stats).forEach(([key, value]) => {
        if (key === 'numbers' && Array.isArray(value)) {
          console.log(`   ${key}: –º–∞—Å—Å–∏–≤ –∏–∑ ${value.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);
        } else if (key === 'lastUpdate') {
          console.log(`   ${key}: ${new Date(value).toLocaleString()}`);
        } else {
          console.log(`   ${key}: ${value}`);
        }
      });
    }
    
    if (latestRecord.features && latestRecord.features.length > 0) {
      console.log(`üéÆ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: ${latestRecord.features.join(', ')}`);
    }
    
    console.log('\nüöÄ –ó–ê–ü–£–°–ö –°–í–ï–ñ–ï–ì–û –ü–ê–†–°–ò–ù–ì–ê –î–õ–Ø –°–†–ê–í–ù–ï–ù–ò–Ø...\n');
    
    // 2. –ó–∞–ø—É—Å—Ç–∏–º —Å–≤–µ–∂–∏–π –ø–∞—Ä—Å–∏–Ω–≥
    const scraper = ScraperFactory.createScraper('crazy-time');
    console.log('üåê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ https://casinoscores.com/...');
    
    const startTime = Date.now();
    const freshResults = await scraper.scrapeAndSave();
    const duration = Math.round((Date.now() - startTime) / 1000);
    
    if (freshResults && freshResults.length > 0) {
      const freshData = freshResults[0];
      
      console.log('‚úÖ –°–í–ï–ñ–ò–ï –î–ê–ù–ù–´–ï –° –°–ê–ô–¢–ê:');
      console.log('-' * 40);
      console.log(`üìã –ù–∞–∑–≤–∞–Ω–∏–µ: ${freshData.name}`);
      console.log(`üåê URL: ${freshData.url}`);
      console.log(`üìä –†–µ–π—Ç–∏–Ω–≥: ${freshData.score}/10`);
      console.log(`‚≠ê –û—Ü–µ–Ω–∫–∞: ${freshData.rating || 'N/A'}`);
      console.log(`üéØ –¢–∏–ø: ${freshData.type}`);
      console.log(`üè¢ –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${freshData.provider}`);
      console.log(`‚è±Ô∏è –í—Ä–µ–º—è –ø–∞—Ä—Å–∏–Ω–≥–∞: ${duration} —Å–µ–∫`);
      
      if (freshData.description) {
        console.log(`üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${freshData.description.substring(0, 200)}...`);
      }
      
      if (freshData.stats) {
        console.log(`üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
        Object.entries(freshData.stats).forEach(([key, value]) => {
          if (key === 'numbers' && Array.isArray(value)) {
            console.log(`   ${key}: –º–∞—Å—Å–∏–≤ –∏–∑ ${value.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);
            // –ü–æ–∫–∞–∂–µ–º –ø–µ—Ä–≤—ã–µ 10 —á–∏—Å–µ–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            console.log(`   –ø–µ—Ä–≤—ã–µ —á–∏—Å–ª–∞: [${value.slice(0, 10).join(', ')}...]`);
          } else if (key === 'source') {
            console.log(`   ${key}: ${value.substring(0, 100)}...`);
          } else {
            console.log(`   ${key}: ${value}`);
          }
        });
      }
      
      console.log('\nüìã –ê–ù–ê–õ–ò–ó –ö–ê–ß–ï–°–¢–í–ê –î–ê–ù–ù–´–•:');
      console.log('=' * 40);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–∑–Ω–∞–∫–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      let realDataScore = 0;
      const checks = [];
      
      // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ URL
      if (freshData.url && freshData.url.includes('casinoscores.com')) {
        realDataScore += 20;
        checks.push('‚úÖ URL –≤–µ–¥–µ—Ç –Ω–∞ casinoscores.com');
      } else {
        checks.push('‚ö†Ô∏è URL –Ω–µ –≤–µ–¥–µ—Ç –Ω–∞ –∏—Å—Ö–æ–¥–Ω—ã–π —Å–∞–π—Ç');
      }
      
      // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
      if (freshData.provider === 'evolution') {
        realDataScore += 15;
        checks.push('‚úÖ –ü—Ä–æ–≤–∞–π–¥–µ—Ä Evolution Gaming –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
      }
      
      // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –∏–≥—Ä—ã
      if (freshData.type === 'game show') {
        realDataScore += 15;
        checks.push('‚úÖ –¢–∏–ø –∏–≥—Ä—ã "game show" –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –¥–ª—è Crazy Time');
      }
      
      // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
      if (freshData.stats && Object.keys(freshData.stats).length > 0) {
        realDataScore += 20;
        checks.push('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        
        if (freshData.stats.numbers && Array.isArray(freshData.stats.numbers)) {
          realDataScore += 15;
          checks.push(`‚úÖ –ù–∞–π–¥–µ–Ω –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª (${freshData.stats.numbers.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤)`);
        }
        
        if (freshData.stats.source) {
          realDataScore += 15;
          checks.push('‚úÖ –ù–∞–π–¥–µ–Ω –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö (likely JSON data)');
        }
      }
      
      // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å–∞–π—Ç–∞
      if (freshData.description && freshData.description.includes('Casino Scores')) {
        checks.push('‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω—Ç–µ–Ω—Ç —Å–∞–π—Ç–∞');
      }
      
      // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
      checks.forEach(check => console.log(check));
      
      console.log(`\nüìä –û–¶–ï–ù–ö–ê –ö–ê–ß–ï–°–¢–í–ê –î–ê–ù–ù–´–•: ${realDataScore}/100`);
      
      if (realDataScore >= 80) {
        console.log('üéâ –û–¢–õ–ò–ß–ù–û! –î–∞–Ω–Ω—ã–µ –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞, –ø–æ–ª—É—á–µ–Ω—ã —Å —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞');
      } else if (realDataScore >= 60) {
        console.log('‚úÖ –•–û–†–û–®–û! –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —Å —Å–∞–π—Ç–∞, –µ—Å—Ç—å –º–µ—Å—Ç–æ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏–π');
      } else if (realDataScore >= 40) {
        console.log('‚ö†Ô∏è –°–†–ï–î–ù–ï! –ß–∞—Å—Ç–∏—á–Ω–æ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —á–∞—Å—Ç–∏—á–Ω–æ fallback');
      } else {
        console.log('‚ùå –ù–ò–ó–ö–û! –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ fallback –¥–∞–Ω–Ω—ã–µ');
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª Crazy Time
      if (freshData.stats && freshData.stats.numbers) {
        const numbers = freshData.stats.numbers;
        const crazyTimeNumbers = [1, 2, 5, 10]; // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –Ω–∞ –∫–æ–ª–µ—Å–µ Crazy Time
        
        console.log('\nüé∞ –ê–ù–ê–õ–ò–ó –°–¢–ê–¢–ò–°–¢–ò–ö–ò CRAZY TIME:');
        console.log(`üìä –í—Å–µ–≥–æ —á–∏—Å–µ–ª –≤ –º–∞—Å—Å–∏–≤–µ: ${numbers.length}`);
        
        // –°—á–∏—Ç–∞–µ–º —á–∞—Å—Ç–æ—Ç—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤
        const frequency = {};
        crazyTimeNumbers.forEach(num => {
          frequency[num] = numbers.filter(n => n === num).length;
        });
        
        console.log('üìà –ß–∞—Å—Ç–æ—Ç–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤:');
        Object.entries(frequency).forEach(([num, count]) => {
          console.log(`   ${num}: ${count} —Ä–∞–∑`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ –±–æ–Ω—É—Å–Ω—ã—Ö —Ä–∞—É–Ω–¥–æ–≤
        const bonusNumbers = numbers.filter(n => n > 10);
        if (bonusNumbers.length > 0) {
          console.log(`üéÅ –ù–∞–π–¥–µ–Ω–æ ${bonusNumbers.length} –±–æ–Ω—É—Å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π`);
          console.log(`   –ü—Ä–∏–º–µ—Ä—ã: [${bonusNumbers.slice(0, 10).join(', ')}...]`);
        }
      }
      
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ');
    }
    
    console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('1. –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞—é—Ç—Å—è —Å —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ casinoscores.com');
    console.log('2. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –∏–∑ –∏–≥—Ä—ã');
    console.log('3. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–µ –∏ —Ç–∏–ø–µ –∏–≥—Ä—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
    console.log('4. –î–ª—è –µ—â–µ –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π');
    
    process.exit(0);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error.message);
    process.exit(1);
  }
}

console.log('üîç –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö...\n');
checkDataQuality();
