const { connectDB } = require('./src/config/database');
const CasinoScore = require('./src/models/CasinoScore');

async function viewSavedData() {
  try {
    console.log('üîç –ü–†–û–°–ú–û–¢–† –°–û–•–†–ê–ù–ï–ù–ù–´–• –î–ê–ù–ù–´–• –í –ë–ê–ó–ï');
    console.log('=' * 50);
    
    await connectDB();
    
    // 1. –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const totalRecords = await CasinoScore.countDocuments();
    const crazyTimeRecords = await CasinoScore.countDocuments({ name: /crazy time/i });
    
    console.log('üìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    console.log(`   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ: ${totalRecords}`);
    console.log(`   –ó–∞–ø–∏—Å–µ–π Crazy Time: ${crazyTimeRecords}`);
    
    if (totalRecords === 0) {
      console.log('‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–∞—Ä—Å–∏–Ω–≥!');
      return;
    }
    
    // 2. –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –∑–∞–ø–∏—Å–∏
    console.log('\nüìã –ü–û–°–õ–ï–î–ù–ò–ï 3 –ó–ê–ü–ò–°–ò:');
    console.log('-' * 40);
    
    const latestRecords = await CasinoScore.find()
      .sort({ createdAt: -1 })
      .limit(3)
      .lean();
    
    latestRecords.forEach((record, index) => {
      console.log(`\n${index + 1}. üìã ${record.name}`);
      console.log(`   üåê URL: ${record.url}`);
      console.log(`   üìä –†–µ–π—Ç–∏–Ω–≥: ${record.score}/10`);
      console.log(`   üéØ –¢–∏–ø: ${record.type}`);
      console.log(`   üè¢ –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${record.provider}`);
      console.log(`   üïê –°–æ–∑–¥–∞–Ω–æ: ${new Date(record.createdAt).toLocaleString()}`);
      
      if (record.stats && record.stats.numbers) {
        console.log(`   üìà –ß–∏—Å–µ–ª –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ: ${record.stats.numbers.length}`);
        console.log(`   üé≤ –ü–µ—Ä–≤—ã–µ 10 —á–∏—Å–µ–ª: [${record.stats.numbers.slice(0, 10).join(', ')}...]`);
      }
      
      if (record.features && record.features.length > 0) {
        console.log(`   üéÆ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: ${record.features.slice(0, 5).join(', ')}`);
      }
    });
    
    // 3. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    console.log('\n‚è∞ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –í–†–ï–ú–ï–ù–ò:');
    console.log('-' * 40);
    
    const now = new Date();
    const oneHourAgo = new Date(now.getTime() - 60 * 60 * 1000);
    const oneDayAgo = new Date(now.getTime() - 24 * 60 * 60 * 1000);
    
    const recordsLastHour = await CasinoScore.countDocuments({
      createdAt: { $gte: oneHourAgo }
    });
    
    const recordsLastDay = await CasinoScore.countDocuments({
      createdAt: { $gte: oneDayAgo }
    });
    
    console.log(`   –ó–∞–ø–∏—Å–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å: ${recordsLastHour}`);
    console.log(`   –ó–∞–ø–∏—Å–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å: ${recordsLastDay}`);
    
    // 4. –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö Crazy Time
    if (crazyTimeRecords > 0) {
      console.log('\nüé∞ –ê–ù–ê–õ–ò–ó CRAZY TIME:');
      console.log('-' * 40);
      
      const crazyTimeData = await CasinoScore.findOne({ name: /crazy time/i })
        .sort({ createdAt: -1 })
        .lean();
      
      if (crazyTimeData && crazyTimeData.stats && crazyTimeData.stats.numbers) {
        const numbers = crazyTimeData.stats.numbers;
        
        // –°—á–∏—Ç–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ Crazy Time
        const standardNumbers = [1, 2, 5, 10];
        const frequency = {};
        
        standardNumbers.forEach(num => {
          frequency[num] = numbers.filter(n => n === num).length;
        });
        
        console.log('   üìä –ß–∞—Å—Ç–æ—Ç–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤:');
        Object.entries(frequency).forEach(([num, count]) => {
          const percentage = ((count / numbers.length) * 100).toFixed(1);
          console.log(`      ${num}: ${count} —Ä–∞–∑ (${percentage}%)`);
        });
        
        // –ë–æ–Ω—É—Å–Ω—ã–µ —Ä–∞—É–Ω–¥—ã
        const bonusNumbers = numbers.filter(n => n > 10 && n !== 12);
        console.log(`   üéÅ –ë–æ–Ω—É—Å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π: ${bonusNumbers.length}`);
        
        // –ú—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ç–æ—Ä—ã
        const multipliers = numbers.filter(n => [20, 24, 26, 50, 72, 100, 500].includes(n));
        console.log(`   üí• –ú—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ç–æ—Ä–æ–≤: ${multipliers.length}`);
      }
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    console.log('\nüîÑ –ü–†–û–í–ï–†–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–ô:');
    console.log('-' * 40);
    
    const newest = await CasinoScore.findOne().sort({ createdAt: -1 });
    const oldest = await CasinoScore.findOne().sort({ createdAt: 1 });
    
    if (newest && oldest) {
      const timeDiff = newest.createdAt - oldest.createdAt;
      const minutesDiff = Math.round(timeDiff / (1000 * 60));
      
      console.log(`   –°–∞–º–∞—è —Å—Ç–∞—Ä–∞—è –∑–∞–ø–∏—Å—å: ${new Date(oldest.createdAt).toLocaleString()}`);
      console.log(`   –°–∞–º–∞—è –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å: ${new Date(newest.createdAt).toLocaleString()}`);
      console.log(`   –ü–µ—Ä–∏–æ–¥ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö: ${minutesDiff} –º–∏–Ω—É—Ç`);
      
      const lastUpdateMinutes = Math.round((now - newest.createdAt) / (1000 * 60));
      console.log(`   –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${lastUpdateMinutes} –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥`);
      
      if (lastUpdateMinutes < 2) {
        console.log('   ‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ!');
      } else if (lastUpdateMinutes < 10) {
        console.log('   ‚ö†Ô∏è –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å –∑–∞–¥–µ—Ä–∂–∫–∏');
      } else {
        console.log('   ‚ùå –ë–æ—Ç –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–≥–æ–µ –≤—Ä–µ–º—è');
      }
    }
    
    console.log('\nüí° –ö–ê–ö –ü–†–û–°–ú–ê–¢–†–ò–í–ê–¢–¨ –î–ê–ù–ù–´–ï:');
    console.log('1. –ß–µ—Ä–µ–∑ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç: node view-saved-data.js');
    console.log('2. –ß–µ—Ä–µ–∑ API: curl "http://localhost:3000/api/casinos?search=crazy"');
    console.log('3. –ß–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä: http://localhost:3000/api/casinos');
    console.log('4. –ß–µ—Ä–µ–∑ MongoDB Compass (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)');
    
    process.exit(0);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –¥–∞–Ω–Ω—ã—Ö:', error.message);
    process.exit(1);
  }
}

console.log('üìä –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã...\n');
viewSavedData();
